#Experiment 1 Modeling:

import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

df = pd.read_csv('Big4_Banks_2005_2024_combined.csv')

X = df[['Total Assets', 'Total Equity', 'Total Revenue']]
y = df['Net Income']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression(fit_intercept=True)
model.fit(X_train, y_train)


#Experiment 1 Evaluation: 

from sklearn.metrics import mean_squared_error, r2_score
import numpy as np

y_pred = model.predict(X_test)

rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)

print("Root Mean Squared Error (RMSE):", rmse)
print("R² Score:", r2)


#Experiment 2: 

import numpy as np

df['ROA'] = df['Net Income'] / df['Total Assets']
df['ROE'] = df['Net Income'] / df['Total Equity']
df['Profit Margin'] = df['Net Income'] / df['Total Revenue']
df['log_Assets'] = np.log(df['Total Assets'])

X = df[['log_Assets', 'ROA', 'ROE', 'Profit Margin', 'Equity_to_Assets']]
y = df['Net Income']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model2 = LinearRegression()
model2.fit(X_train, y_train)

y_pred2 = model2.predict(X_test)
rmse2 = np.sqrt(mean_squared_error(y_test, y_pred2))
r2_2 = r2_score(y_test, y_pred2)
print("RMSE:", rmse2)
print("R²:", r2_2)


#Experiment 3:

from sklearn.linear_model import Ridge

X = df[['log_Assets', 'ROA', 'ROE', 'Profit Margin', 'Equity_to_Assets']]
y = df['Net Income']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


ridge_model = Ridge(alpha=1.0) 
ridge_model.fit(X_train, y_train)

y_pred3 = ridge_model.predict(X_test)
rmse3 = np.sqrt(mean_squared_error(y_test, y_pred3))
r2_3 = r2_score(y_test, y_pred3)

print("RMSE:", rmse3)
print("R²:", r2_3)


